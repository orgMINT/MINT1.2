    .engine mycomputer

    .include "constants.asm"
    .include "test.fast.mac.asm"
    
    .include "IOSerial.asm"
    
    LD SP,DSTACK
    ; CALL init
    JP testsStart
    
    .include "MAIN.asm"
    .include "ram.asm"
    
    .org $4000

testsStart:

    test "#10", $10

    CALL printStr
    .cstr "Done!!\r\n"
    HALT

    test "1", 1
    test "0", 0
    test "10", 10
    test "#10", $10
    test "#FF", $FF
    test "2 3=", 0
    test "3 3=", 1
    test "2 3<", 1
    test "3 3<", 0
    test "3 3>", 0
    test "4 3>", 1
    test "1 2+", 3
    test "123 456+", 123+456
    test "64 128+", 64+128
    test "5 3-", 2
    test "-1 2+",1
    test "-1 1+",0
    test "#FFFF 1 + \\c@ +", 1
    test "0 1 - \\c@ +", 0
    test "3 5&", 1
    test "3 5|", 7
    test "1{", 2
    test "1}", 0
    test "2}", 1
    test "1 2 3 ' +", 3
    test "2 3*", 6
    test "1 2 3+*", 5
    test "1 2 \\D", 2
    test "7 2/'", 3
    test "7 2/$ '", 1
    test "1 1/'", 1
    test "-1 1/'", -1
    test "1 -1/'", -1
    test "-1 -1/'", 1
    test "3 5$ -", 2
    test "2 3%++", 7
    test "1 2 3~''", 2
    test "1 2 3~+*", 8
    test "2a!a@",2
    test "3x! 1 x@+x! x@", 4
    test "3x! -1 x@+x! x@", 2
    test ":X1; X", 1
    test ":A100;A", 100
    test ":Aa!; 3A a@", 3
    test ":Aa!;:Ba@;4AB", 4
    test "\\:2; \\G", 2
    test "[]", heap+2
    test "[1]", heap+2
    test "[]\\S", 0
    test "[3]\\S", 1
    test "[3]@", 3
    test "[1 2 3]1_@", 2
    test "[1 [2]] 1_@ 0_@", 2
    test "\\h@[1]'\\h@$-", 4
    test "\\h@[1 2 3]'\\h@$-", 8
    test "\\[3]\\@", 3
    test "\\[3]\\S", 1
    test "\\[1 2 3]\\@", 1
    test "\\[1 2 3]1+\\@", 2
    test "\\h@\\[1 2 3]'\\h@$-", 5
    test "\\h@\\[1]'\\h@$-", 3
    test "0 0(1+)", 0
    test "0 1(1+)", 1
    test "0 2(1+)", 2
    test "0 1(0(1+))", 0
    test "0 1(1(1+))", 1
    test "0 2(1(1+))", 2
    test "0 2(2(1+))", 4
    test "0 1(\\i@+)", 0
    test "0 2(\\i@+)", 1
    test "0 3(\\i@+)", 3
    test "0t! 10(1 t@+t!) t@",10
    test "0t! 2(2(\\i@ \\j@ + t@ + t! )) t@", 4
    test "0(100)(200)",200
    test "1(100)(200)",100
    test "0t! 10(\\i@ 4>\\B \\i@ 1 t@+t!) t@",5
    test "0t! [1 2 3] a! a@\\S ( a@ \\i@ _ @ t@+t! ) t@", 6
    test "\\: 1 ; \\G", 1
    test "[\\: 10 ;] 0_@ \\G", 10
    test "[\\: 10 ; \\: 20 ; \\: 30 ;] 2_@ \\G",30

    CALL enter
    .cstr "`Done!`"
    HALT
    